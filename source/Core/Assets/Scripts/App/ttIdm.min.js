(function(n){function i(n,t){if(t){function i(n,i){return{request:function(n){return t.token&&(n.headers.Authorization="Bearer "+t.token.access_token),n},responseError:function(t){return t.status===401&&i.removeToken(),n.reject(t)}}}i.$inject=["$q","idmToken"];n.interceptors.push(i)}}function r(n,t,i,r){function h(){r.$evalAsync(function(){o.forEach(function(n){n()})})}function c(){r.$evalAsync(function(){s.forEach(function(n){n()})})}var u=i.localStorage,f,e,o,s;return n&&(f=u.getItem("idm.token"),f&&(e=Token.fromJSON(f),e.expired||(n.token=e,c())),n.token||h()),o=[],s=[],{addOnTokenExpired:function(n){o.push(n)},addOnTokenObtained:function(n){s.push(n)},hasToken:function(){return!!(n&&n.token&&!n.token.expired)},isTokenNeeded:function(){return!!(n&&(!n.token||n.token.expired))},removeToken:function(){u.removeItem("idm.token");n.token=null;h()},redirectForToken:function(r){var o=new OAuthClient(i.localStorage),u=t.absUrl(),f=u.indexOf("#"),e;f>0&&(u=u.substring(0,f));u+="#/"+r;e=o.createImplicitRequest(n.AuthorizationUrl,n.ClientId,u,n.Scope);i.location=e.url},processTokenCallback:function(r,f){var o=new OAuthClient(i.localStorage),e=o.readImplicitResult(t.url());e.error?f&&f(e.error):(n.token=Token.fromOAuthResponse(e),u.setItem("idm.token",n.token.toJSON()),c(),r&&r())}}}function u(n,t,i,r){var u=null;return n.addOnTokenExpired(function(){u=null}),{get:function(){if(u){var n=i.defer();return n.resolve(u),n.promise}return t.get(r+"/api").then(function(n){return u=n.data},function(n){if(u=null,n.status===401)throw"You are not authorized to use this service.";else throw"Failed to load API.";})}}}function f(n,t,i){function f(){}function e(n){return n.data}function u(n){return n=n||"Unexpected Error",function(t){t.data.exceptionMessage&&i.error(t.data.exceptionMessage);throw t.data.errors||t.data.message||n;}}var r=t.get().then(function(t){r.getUsers=function(i,r,f){return n.get(t.links.users,{params:{filter:i,start:r,count:f}}).then(e,u("Error Getting Users"))};r.getUser=function(i){return n.get(t.links.users+"/"+encodeURIComponent(i)).then(e,u("Error Getting User"))};t.links.createUser&&(r.createUser=function(i){return n.post(t.links.createUser.href,i).then(e,u("Error Creating User"))});r.deleteUser=function(t){return n.delete(t.links.delete).then(f,u("Error Deleting User"))};r.setProperty=function(t){return t.data===0&&(t.data="0"),t.data===!1&&(t.data="false"),n.put(t.links.update,t.data).then(f,u(t.meta&&t.meta.name&&"Error Setting "+t.meta.name||"Error Setting Property"))};r.addClaim=function(t,i){return n.post(t.links.create,i).then(f,u("Error Adding Claim"))};r.removeClaim=function(t){return n.delete(t.links.delete).then(f,u("Error Removing Claim"))};r.addRole=function(t){return n.post(t.links.add).then(f,u("Error Adding Role"))};r.removeRole=function(t){return n.delete(t.links.remove).then(f,u("Error Removing Role"))}});return r}function e(n,t,i){function e(){}function f(n){return n.data}function u(n){return n=n||"Unexpected Error",function(t){t.data.exceptionMessage&&i.error(t.data.exceptionMessage);throw t.data.errors||t.data.message||n;}}var r=t.get().then(function(t){r.getRoles=function(i,r,e){return n.get(t.links.roles,{params:{filter:i,start:r,count:e}}).then(f,u("Error Getting Roles"))};r.getRole=function(i){return n.get(t.links.roles+"/"+encodeURIComponent(i)).then(f,u("Error Getting Role"))};r.setProperty=function(t){return t.data===0&&(t.data="0"),t.data===!1&&(t.data="false"),n.put(t.links.update,t.data).then(e,u(t.meta&&t.meta.name&&"Error Setting "+t.meta.name||"Error Setting Property"))};t.links.createRole&&(r.createRole=function(i){return n.post(t.links.createRole.href,i).then(f,u("Error Creating Role"))});r.deleteRole=function(t){return n.delete(t.links.delete).then(e,u("Error Deleting Role"))}});return r}var t=n.module("ttIdm",[]);i.$inject=["$httpProvider","OAuthConfig"];t.config(i);r.$inject=["OAuthConfig","$location","$window","$rootScope"];t.factory("idmToken",r);u.$inject=["idmToken","$http","$q","PathBase"];t.factory("idmApi",u);f.$inject=["$http","idmApi","$log"];t.factory("idmUsers",f);e.$inject=["$http","idmApi","$log"];t.factory("idmRoles",e)})(angular),function(n){var t=document.getElementById("model").textContent.trim(),i;t=JSON.parse(t);for(i in t)n.module("ttIdm").constant(i,t[i])}(angular);
/*
//# sourceMappingURL=ttIdm.min.js.map
*/